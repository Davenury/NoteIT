{"version":3,"sources":["dialogs/NoteDetailsPopup.js","dialogs/DeleteNotePopup.js","components/CustomFormComponent.js","dialogs/UpdateNotePopup.js","components/ActionsButtons.js","components/Note.js","components/NotesTable.js","components/NotesComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NoteDetailsPopup","Dialog","maxWidth","fullWidth","open","this","props","openPopup","onClose","closePopup","DialogTitle","id","note","title","DialogContent","DialogContentText","content","Table","hover","created","modified","version","DialogActions","onClick","color","react","Component","DeleteNotePopup","Button","variant","deleteNoteAndClose","CustomFormComponent","type","state","onInputChange","bind","onSubmitForm","event","setState","target","name","value","window","location","reload","xhr","XMLHttpRequest","form","document","getElementById","getID","fd","FormData","addEventListener","status","swal","responseText","then","actionUrl","send","preventDefault","Box","m","TextField","label","onChange","TextareaAutosize","rowsMin","className","UpdateNotePopup","baseURL","style","textAlign","prepareUrlForUpdateNote","ActionsButtons","showDetailsPopup","showDeletePopup","showUpdatePopup","toggleDeletePopup","toggleUpdatePopup","toggleDetailsPopup","deleteNoteAndClosePopup","Note","note_object","_title","_content","_created","_modified","_version","_id","actions","prepareDate","timestamp","Date","toLocaleDateString","NotesTable","columns","dataField","text","sort","classes","keyField","data","notes","bootstrap4","caption","Badge","NotesComponent","undefined","isFetching","mounted","getNotes","fetch","baseUrl","response","json","result","map","catch","e","console","log","CircularProgress","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b8e1d8a7.chunk.js","sourcesContent":["import react from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nexport class NoteDetailsPopup extends react.Component {\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                maxWidth='sm'\r\n                fullWidth={true}\r\n                open={this.props.openPopup}\r\n                onClose={this.props.closePopup}>\r\n                <DialogTitle id=\"alert-dialog-title\">{this.props.note.title}</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {this.props.note.content}\r\n                    </DialogContentText>\r\n\r\n                    <Table hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                   Creation Date\r\n                                </th>\r\n                                <th>Modification Date</th>\r\n                                <th>Version</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{this.props.note.created}</td>\r\n                                <td>{this.props.note.modified}</td>\r\n                                <td>{this.props.note.version}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closePopup} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}","import react from 'react';\r\nimport {Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport class DeleteNotePopup extends react.Component {\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                maxWidth='sm'\r\n                fullWidth={true}\r\n                open={this.props.openPopup}\r\n                onClose={this.props.closePopup}>\r\n                <DialogTitle id=\"alert-dialog-title\">Delete Note {this.props.note.title}?</DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closePopup} variant=\"outline-primary\">\r\n                        Don't delete Note\r\n                    </Button>\r\n                    <Button onClick={this.props.deleteNoteAndClose} variant=\"danger\">\r\n                        Delete Note\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}","import react from 'react';\r\nimport swal from 'sweetalert';\r\nimport {Box, TextareaAutosize, TextField} from \"@material-ui/core\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport '../css/Form.css'\r\n\r\nexport class CustomFormComponent extends react.Component{\r\n\r\n    type = \"Created\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let title = \"\";\r\n        let content = \"\";\r\n        if(this.props.note !== null){\r\n            title = this.props.note.title;\r\n            content = this.props.note.content;\r\n            this.type = \"Updated\";\r\n        }\r\n        this.state = {\r\n            title: title,\r\n            content: content\r\n        };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n    }\r\n\r\n    onInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    reload(){\r\n        window.location.reload(false);\r\n    }\r\n\r\n    onSubmitForm(){\r\n        let xhr = new XMLHttpRequest();\r\n        let form = document.getElementById(this.getID())\r\n        let fd = new FormData(form);\r\n        xhr.addEventListener('load', () => {\r\n            if(xhr.status === 406){\r\n                swal(\"Error!\", xhr.responseText, \"error\")\r\n            }\r\n            else {\r\n                swal(\"Note \" + this.type, \"\", \"success\")\r\n                    .then(() => {\r\n                        this.reload()\r\n                    })\r\n            }\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n            swal(\"Something went wrong!\", \"We're sorry, but something went wrong, please contact administrator\", \"error\")\r\n                .then(() => {\r\n                    this.reload()\r\n                })\r\n        })\r\n        xhr.open(\"POST\", this.props.actionUrl);\r\n        xhr.send(fd);\r\n        form.addEventListener(\"submit\", (event) => {\r\n            event.preventDefault();\r\n        })\r\n    }\r\n\r\n    getID(){\r\n        return \"form\" + this.type\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form id={this.getID()}>\r\n                <Box m={2}>\r\n                <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Title\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.onInputChange}/>\r\n                </Box>\r\n                <Box m={2}>\r\n                <TextareaAutosize\r\n                    id=\"standard-basic\"\r\n                    label=\"Content\"\r\n                    type=\"text\"\r\n                    name=\"content\"\r\n                    value={this.state.content}\r\n                    onChange={this.onInputChange}\r\n                    rowsMin={5}\r\n                    className=\"textArea\"/>\r\n                    <br/>\r\n                </Box>\r\n                <Box m={2}>\r\n                <Button\r\n                    variant=\"secondary\"\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmitForm}\r\n                >{this.type === \"Created\" ? \"Add new Note\" : \"Update this Note\"}</Button>\r\n                </Box>\r\n            </form>\r\n        )\r\n    }\r\n}","import react from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {CustomFormComponent} from \"../components/CustomFormComponent\";\r\n\r\nexport class UpdateNotePopup extends react.Component {\r\n\r\n    prepareUrlForUpdateNote(){\r\n        return this.props.note.baseURL + \"update_note/\" + this.props.note.id\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                style={{textAlign: \"center\"}}\r\n                maxWidth='sm'\r\n                fullWidth={true}\r\n                open={this.props.openPopup}\r\n                onClose={this.props.closePopup}>\r\n                <DialogTitle id=\"alert-dialog-title\">Update {this.props.note.title}</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <CustomFormComponent\r\n                        actionUrl={this.prepareUrlForUpdateNote()}\r\n                        note={this.props.note}\r\n                    />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closePopup} variant=\"outline-primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}","import react from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport '../css/ActionButtons.css'\r\nimport {NoteDetailsPopup} from \"../dialogs/NoteDetailsPopup\";\r\nimport {DeleteNotePopup} from \"../dialogs/DeleteNotePopup\";\r\nimport {UpdateNotePopup} from \"../dialogs/UpdateNotePopup\";\r\nimport swal from 'sweetalert';\r\n\r\nexport class ActionsButtons extends react.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            showDetailsPopup: false,\r\n            showDeletePopup: false,\r\n            showUpdatePopup: false\r\n        };\r\n        this.toggleDeletePopup = this.toggleDeletePopup.bind(this)\r\n        this.toggleUpdatePopup = this.toggleUpdatePopup.bind(this)\r\n        this.toggleDetailsPopup = this.toggleDetailsPopup.bind(this)\r\n        this.deleteNoteAndClosePopup = this.deleteNoteAndClosePopup.bind(this)\r\n    }\r\n\r\n    toggleDeletePopup(){\r\n        this.setState({\r\n            showDeletePopup: !this.state.showDeletePopup\r\n        })\r\n    }\r\n\r\n    toggleUpdatePopup(){\r\n        this.setState({\r\n            showUpdatePopup: !this.state.showUpdatePopup\r\n        })\r\n    }\r\n\r\n    toggleDetailsPopup(){\r\n        this.setState({\r\n            showDetailsPopup: !this.state.showDetailsPopup\r\n        });\r\n    }\r\n\r\n    deleteNoteAndClosePopup(){\r\n        //send request to delete note with id from this.props.note.id\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.addEventListener('load', () =>{\r\n            swal(\"Note deleted!\", \"\", \"success\")\r\n                .then( value => {\r\n                    window.location.reload(false);\r\n                })\r\n        })\r\n        xhr.open('POST', this.props.note.baseURL + 'delete_note/' + this.props.note.id)\r\n        xhr.send()\r\n        this.toggleDeletePopup()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            {\r\n                this.state.showDeletePopup ?\r\n                    <DeleteNotePopup\r\n                        openPopup={this.toggleDeletePopup}\r\n                        closePopup={this.toggleDeletePopup}\r\n                        deleteNoteAndClose={this.deleteNoteAndClosePopup}\r\n                        note = {this.props.note} /> : null\r\n            }\r\n            {\r\n                this.state.showDetailsPopup ?\r\n                    <NoteDetailsPopup\r\n                        openPopup={this.toggleDetailsPopup}\r\n                        closePopup={this.toggleDetailsPopup}\r\n                        note = {this.props.note} /> : null\r\n            }\r\n            {\r\n                this.state.showUpdatePopup ?\r\n                    <UpdateNotePopup\r\n                        openPopup={this.toggleUpdatePopup}\r\n                        closePopup={this.toggleUpdatePopup}\r\n                        note = {this.props.note} /> : null\r\n            }\r\n            <Button\r\n                variant=\"success\"\r\n                onClick={this.toggleDetailsPopup}\r\n            >\r\n                Show details\r\n            </Button>\r\n            <Button\r\n                onClick={this.toggleUpdatePopup}\r\n                variant=\"info\"\r\n            >\r\n                Update\r\n            </Button>\r\n            <Button\r\n                onClick={this.toggleDeletePopup}\r\n                variant=\"danger\"\r\n            >\r\n                Delete\r\n            </Button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import {ActionsButtons} from \"./ActionsButtons\";\r\n\r\nexport class Note{\r\n    constructor(note_object, baseURL) {\r\n        this.baseURL = baseURL;\r\n        this._title = note_object.title\r\n        this._content = note_object.content\r\n        this._created = note_object.created\r\n        this._modified = note_object.modified\r\n        this._version = note_object.version\r\n        this._id = note_object.id\r\n        this.actions = <ActionsButtons note={this}/>\r\n    }\r\n\r\n    get title(){\r\n        return this._title\r\n    }\r\n\r\n    get content(){\r\n        return this._content\r\n    }\r\n\r\n    get created(){\r\n        return this.prepareDate(this._created)\r\n    }\r\n\r\n    get modified(){\r\n        return this.prepareDate(this._modified)\r\n    }\r\n\r\n    get version(){\r\n        return this._version\r\n    }\r\n\r\n    get id(){\r\n        return this._id\r\n    }\r\n\r\n    prepareDate(timestamp){\r\n        return new Date(timestamp*1000).toLocaleDateString(\"en-GB\")\r\n    }\r\n}","import react from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {Badge} from \"react-bootstrap\";\r\n\r\nexport class NotesTable extends react.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            dataField: 'title',\r\n            text: \"Title Click to sort!\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'created',\r\n            text: 'Creation date Click to sort!',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'modified',\r\n            text: 'Last Modification Date Click to sort!',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'version',\r\n            text: 'Version'\r\n        },\r\n        {\r\n            text: 'Actions',\r\n            dataField: 'actions'\r\n        }\r\n    ]\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <BootstrapTable\r\n                    classes=\"bootstrapTable\"\r\n                    keyField=\"id\"\r\n                    data={this.props.notes}\r\n                    columns={this.columns}\r\n                    bootstrap4={true}\r\n                    hover={true}\r\n                    caption={<h3><Badge variant=\"info\">Click on Column to sort!</Badge></h3>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import react from 'react';\r\nimport {Note} from \"./Note\";\r\nimport {NotesTable} from \"./NotesTable\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport class NotesComponent extends react.Component{\r\n\r\n    state={\r\n        notes: undefined,\r\n        isFetching: false\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true\r\n        this.getNotes()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false\r\n    }\r\n\r\n    getNotes(){\r\n        this.setState({ isFetching: true });\r\n        fetch(this.props.baseUrl + 'get_all_notes')\r\n            .then(response => response.json())\r\n            .then(\r\n                result => {\r\n                    this.setState({isFetching: false})\r\n                    return result.notes.map(note => new Note(note, this.props.baseUrl))\r\n                }\r\n            )\r\n            .then(notes => {\r\n                if(this.mounted){\r\n                    this.setState({ notes: notes, isFetching: false })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ isFetching: false })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        if (this.state.notes === undefined && this.state.isFetching === true){\r\n            return (\r\n                <div>\r\n                    <p>Looking for notes...</p>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.state.notes === undefined){\r\n            return (\r\n                <div>\r\n                    <p>Looks like you don't have any notes. Create one now!</p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <NotesTable baseURL={this.props.baseUrl} notes={this.state.notes}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import './App.css';\nimport {NotesComponent} from \"./components/NotesComponent\";\nimport {CustomFormComponent} from \"./components/CustomFormComponent\";\n\nconst baseURL = \"https://polsourcetask.davenury.repl.co/\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <CustomFormComponent\n            note = {null}\n            actionUrl = {baseURL + \"create_note\"}\n        />\n        <NotesComponent baseUrl={baseURL} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}